name: "add block to dev and stg"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version of the model eg. v0.0.1"
        required: true
      docker-tag:
        description: "Custom Docker Tag (For Dev Release)"
        required: false
      environment:
        description: "Env to which the block is to be added"
        type: choice
        default: development
        options:
          - development
          - staging

env:
  AWS_DEFAULT_REGION: us-east-2
  ECR_REGISTRY: 269716152256.dkr.ecr.us-east-2.amazonaws.com
  Frontier_Sub: ${{ secrets.FRONTIER_SUB }}
  Frontier_Org_Ids: ${{ secrets.FRONTIER_ORG_IDS }}
  VERSION: ${{ github.event.inputs.version }}

jobs:
  image-build-push-dev:
    runs-on: [pixxel-default]
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development')
    permissions:
      id-token: write
      contents: write
    outputs:
      img-tag: ${{ steps.persist_img_tag.outputs.IMG_TAG }}
    steps:
      - name: Set SHA as docker tag(dev)
        if: (github.event_name == 'workflow_dispatch' && github.event.inputs.docker-tag == '')
        env:
          SHA: ${{ github.sha }}
        run: |
          echo "IMAGE_TAG=$SHA" >> $GITHUB_ENV

      - name: Set user given docker tag(dev)
        if: (github.event_name == 'workflow_dispatch' && github.event.inputs.docker-tag != '')
        env:
          TAG: ${{ github.event.inputs.docker-tag }}
        run: |
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV

      - name: Persist Image Tag across Jobs
        id: persist_img_tag
        env:
          TAG: ${{ env.IMAGE_TAG }}
        run: |
          echo "IMG_TAG=$TAG" >> "$GITHUB_OUTPUT"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@b8c74de753fbcb4868bf2011fb2e15826ce973af
        with:
          role-to-assume: arn:aws:iam::269716152256:role/GithubActionsRole
          role-session-name: samplerolesession
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to AWS Container Registry
        id: login-ecr
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ECR_REGISTRY }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::269716152256:role/GithubActionsRole
          audience: sigstore
          aws-region: us-east-2


      - name: Set aws codeartifact token for clay
        id: codeartifact-token
        run: |
          echo "CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain p-core-artifactory-domain-01 --domain-owner 269716152256 --query authorizationToken --region us-east-2 --output text)" >> "$GITHUB_ENV"

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          secrets: |
              CODEARTIFACT_AUTH_TOKEN=${{ env.CODEARTIFACT_AUTH_TOKEN }}
          tags: |
              ${{ env.ECR_REGISTRY }}/demo-test:${{ env.IMAGE_TAG }}


  image-build-push-stg:
    runs-on: [pixxel-default]
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    permissions:
      id-token: write
      contents: write
    outputs:
      img-tag: ${{ steps.persist_img_tag.outputs.IMG_TAG }}
    steps:
      - name: Set docker image Tag(stg)
        env:
          TAG: ${{ github.event.inputs.version }}
        run: |
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV

      - name: Create Git tag
        if: (github.event_name == 'workflow_dispatch')
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.IMAGE_TAG }}',
              sha: context.sha
            })
      - name: Persist Image Tag across Jobs
        id: persist_img_tag
        env:
          TAG: ${{ env.IMAGE_TAG }}
        run: |
          echo "IMG_TAG=$TAG" >> "$GITHUB_OUTPUT"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@b8c74de753fbcb4868bf2011fb2e15826ce973af
        with:
          role-to-assume: arn:aws:iam::269716152256:role/GithubActionsRole
          role-session-name: samplerolesession
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to AWS Container Registry
        id: login-ecr
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ECR_REGISTRY }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::269716152256:role/GithubActionsRole
          audience: sigstore
          aws-region: us-east-2

      - name: Set aws codeartifact token for clay
        id: codeartifact-token
        run: |
          echo "CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain p-core-artifactory-domain-01 --domain-owner 269716152256 --query authorizationToken --region us-east-2 --output text)" >> "$GITHUB_ENV"

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          secrets: |
              CODEARTIFACT_AUTH_TOKEN=${{ env.CODEARTIFACT_AUTH_TOKEN }}
          tags: |
              ${{ env.ECR_REGISTRY }}/demo-test:${{ env.IMAGE_TAG }}

  push-block-to-dev:
    needs: [image-build-push-dev]
    runs-on: [pixxel-default]
    env:
      ARN: 352963465703

    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development')
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.ARN }}:role/GithubDeployRole
          audience: https://github.com/pixxelhq
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Download Clay Binaries
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
            repo: pixxelhq/clay
            tag: v0.4.0
            token: ${{ secrets.CLAY_BIN_DOWNLOAD_TOKEN}}
            extension-matching: disable
            platform: linux
            arch: amd64
            rename-to: clay
            chmod: 0755

      - name: Upload model readme to s3
        id: upload_readme
        run: |
            echo "url=$(clay upload readme -n demo-test -v ${{ env.VERSION }} --env dev)" >> $GITHUB_OUTPUT

      - name: Get Image tag
        id: image_tag
        run: |
          IMAGE_TAG=${{ needs.image-build-push-dev.outputs.img-tag }}
          echo "$IMAGE_TAG"
          echo "::set-output name=value::$IMAGE_TAG"

      - name: Create local changes
        run: |
          sed -i "s|image:.*|image: \"${{ env.ECR_REGISTRY }}/demo-test:${{ steps.image_tag.outputs.value }}\"|" demo-test/specifications/model_specification_dev.yaml
          sed -i "s|catalog_content_url:.*|catalog_content_url: \"${{ steps.upload_readme.outputs.url }}\"|" demo-test/specifications/model_specification_dev.yaml
          sed -i "s|^version:.*|version: \"${{ env.VERSION }}\"|" demo-test/specifications/model_specification_dev.yaml

      - name: Push model to dexter
        run: |
          clay add block demo-test/specifications/model_specification_dev.yaml --env dev

      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "updated image + catalog url + version"

      - name: Push changes back to github
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}


  push-block-to-stg:
    runs-on: [pixxel-default]
    needs: [image-build-push-stg]
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging' && needs.image-build-push-stg.result == 'success')
    env:
      ARN: 956713315521
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.ARN }}:role/GithubDeployRole
          audience: https://github.com/pixxelhq
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Download Clay Binaries
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
            repo: pixxelhq/clay
            tag: v0.4.0
            token: ${{ secrets.CLAY_BIN_DOWNLOAD_TOKEN}}
            extension-matching: disable
            platform: linux
            arch: amd64
            rename-to: clay
            chmod: 0755

      - name: Upload model readme to s3
        id: upload_readme
        run: |
            echo "url=$(clay upload readme -n demo-test -v ${{ env.VERSION }} --env stg)" >> $GITHUB_OUTPUT

      - name: Get Image tag
        id: image_tag
        run: |
          IMAGE_TAG=${{ needs.image-build-push-stg.outputs.img-tag }}
          echo "$IMAGE_TAG"
          echo "::set-output name=value::$IMAGE_TAG"


      - name: Create local changes
        run: |
          sed -i "s|image:.*|image: \"${{ env.ECR_REGISTRY }}/demo-test:${{ steps.image_tag.outputs.value }}\"|" demo-test/specifications/model_specification_stg.yaml
          sed -i "s|catalog_content_url:.*|catalog_content_url: \"${{ steps.upload_readme.outputs.url }}\"|" demo-test/specifications/model_specification_stg.yaml
          sed -i "s|^version:.*|version: \"${{ env.VERSION }}\"|" demo-test/specifications/model_specification_stg.yaml

      - name: Push model to dexter
        run: |
          clay add block demo-test/specifications/model_specification_stg.yaml --env stg

      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "updated image + catalog url + version"

      - name: Push changes back to github
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
